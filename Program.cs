using DataProcessor;
using DataProcessor.Strategies;

string jsonString = File.ReadAllText("jsconfig.json");

DataProcesser dataProcessor = new(new StrategyMinus(), jsonString);
Console.WriteLine(dataProcessor.Strategy.ToString());
Console.WriteLine(dataProcessor.ProcessData().MakeString());
Console.WriteLine(dataProcessor.ExecuteTransformations().ListsString());
Console.WriteLine("-----");
dataProcessor.SetStrategy(new StrategyPlus());
Console.WriteLine(dataProcessor.Strategy.ToString()); 
Console.WriteLine(dataProcessor.ProcessData().MakeString());
Console.WriteLine(dataProcessor.ExecuteTransformations().ListsString());
Console.WriteLine("-----"); 
dataProcessor.SetStrategy(new StrategyMultiply());
Console.WriteLine(dataProcessor.Strategy.ToString()); 
Console.WriteLine(dataProcessor.ProcessData().MakeString());
Console.WriteLine(dataProcessor.ExecuteTransformations().ListsString());
Console.WriteLine("-----"); 
dataProcessor.SetStrategy(new StrategyDivide());
Console.WriteLine(dataProcessor.Strategy.ToString()); 
Console.WriteLine(dataProcessor.ProcessData().MakeString());
Console.WriteLine(dataProcessor.ExecuteTransformations().ListsString());
Console.WriteLine("-----"); 
dataProcessor.SetStrategy(new StrategySquare());
Console.WriteLine(dataProcessor.Strategy.ToString()); 
Console.WriteLine(dataProcessor.ProcessData().MakeString());
Console.WriteLine(dataProcessor.ExecuteTransformations().ListsString());
Console.WriteLine("-----"); 
dataProcessor.SetStrategy(new StrategyMinus());
Console.WriteLine(dataProcessor.Strategy.ToString()); 
Console.WriteLine(dataProcessor.ProcessData().MakeString());
Console.WriteLine(dataProcessor.ExecuteTransformations().ListsString());
